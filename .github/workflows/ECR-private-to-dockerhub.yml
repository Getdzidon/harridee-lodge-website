name: Build and Push to AWS ECR Private Registry, then to DockerHub

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: harridee-webapp
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private  # Set to 'private' if itâ€™s a private repository

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest .

      - name: Generate unique image tag
        id: generate_tag
        run: |
          # Use commit SHA or a timestamp for unique tagging
          IMAGE_TAG=${GITHUB_SHA:0:7}  # First 7 characters of the commit hash
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV  # Set the IMAGE_TAG as an environment variable

      - name: Tag Docker image for ECR with unique tag
        run: |
          # Use the unique IMAGE_TAG when tagging for ECR
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      # Publishing image from ECR to Docker Hub (optional)
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Tag Image for Docker Hub with unique tag
        run: |
          # Tag image for Docker Hub using the same unique tag
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
